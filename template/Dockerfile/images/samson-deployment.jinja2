{% import 'Dockerfile/provision.jinja2' as provision %}

{% macro general(role='') -%}
ENV RAILS_ENV="production"

ENV SQLITE_CLEANUP_DAYS=0

# NGINX reverse proxy
RUN export DEBIAN_FRONTEND=noninteractive && set -x \
       && echo deb https://apt.dockerproject.org/repo debian-jessie main > /etc/apt/sources.list.d/docker.list \
       && apt-key adv --keyserver hkp://pgp.mit.edu:80 --recv-keys 58118E89F3A912897C070ADBF76221572C52609D \
    && /usr/local/bin/apt-install \
        # Install nginx
        nginx \
        # Install docker
        docker-engine \
        # Install php
        php5-cli \
        php5-mysqlnd \
        php5-mcrypt \
        php5-curl \
        php5-recode \
        php5-json \
        # Install java
        openjdk-7-jre \
        # SQlite 3
        sqlite3 \
    && pip install -U \
        docker-compose \
        python-dotenv \
    && curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin/ --filename=composer \
    ## Enable ansible for deployment user
    && chmod 755 /usr/local/bin/ansible*

# NPM stack
RUN npm install -g npm \
    && npm update -g \
    && npm install -g gulp \
    && npm install -g grunt-cli \
    && npm install -g bower \
    && npm install -g npm-cache

# Deployer stack
RUN set -x \
    # Compiler stuff
    && /usr/local/bin/apt-install \
        build-essential \
    # Deployer: Ansistratno (https://github.com/ansistrano)
    && ansible-galaxy install --force \
        carlosbuenosvinos.ansistrano-deploy \
        carlosbuenosvinos.ansistrano-rollback \
    # Deployer: PHP Deployer (http://deployer.org/)
    && wget --quiet -O/usr/local/bin/dep http://deployer.org/deployer.phar \
    && chmod +x /usr/local/bin/dep \
    # Deployer: capistrano (http://capistranorb.com/)
    && gem install capistrano \
    # Deplyer: Magallanes
    && wget http://download.magephp.com/magallanes.latest.tar.gz -O /tmp/magallanes.tar.gz \
    && tar -xzf /tmp/magallanes.tar.gz -C /tmp/ \
    && /tmp/magallanes/bin/mage install --installDir=/opt/magallanes \
    && rm -rf /tmp/magallanes.tar.gz /tmp/magallanes/ \
    && ln -s /opt/magallanes/latest/bin/mage /usr/bin/mage

# Upload
ADD database.yml    /app/config/database.yml
ADD web/            /app/public/assets/

ADD crontab         /etc/cron.d/webdevops-samson-deployment

RUN rake assets:precompile \
    && /opt/docker/bin/control.sh service.enable cron \
    {{ provision.runRoleInline('base', 'base-app', 'samson-deployment', role) }}


{%- endmacro %}
